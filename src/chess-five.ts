import { 三, 五, 七, 正数键值对, 不可能, 空, 否 } from "./number";
import { 构造棋子坐标 } from "./base";
import {
  棋盘行,
  棋盘,
  获取棋盘指定行,
  渲染行内容,
  构造棋盘格参数,
  构造棋盘行,
  构造棋盘格,
  构造棋盘,
  初始棋盘格参数,
} from "./biz";

type 五子棋元坐标 =
  | 构造棋子坐标<三, 三>
  | 构造棋子坐标<三, 七>
  | 构造棋子坐标<五, 五>
  | 构造棋子坐标<七, 三>
  | 构造棋子坐标<七, 七>;

type 构造五子棋棋盘行参数 = [
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数,
  构造棋盘格参数
];

type 构造五子棋棋盘行<
  T extends 构造五子棋棋盘行参数,
  P extends 棋盘行["下一行"]
> = T extends [
  infer 第一格 extends 构造棋盘格参数,
  infer 第二格 extends 构造棋盘格参数,
  infer 第三格 extends 构造棋盘格参数,
  infer 第四格 extends 构造棋盘格参数,
  infer 第五格 extends 构造棋盘格参数,
  infer 第六格 extends 构造棋盘格参数,
  infer 第七格 extends 构造棋盘格参数,
  infer 第八格 extends 构造棋盘格参数,
  infer 第九格 extends 构造棋盘格参数
]
  ? 构造棋盘行<
      {
        内容: 构造棋盘格<
          第一格,
          空,
          构造棋盘格<
            第二格,
            空,
            构造棋盘格<
              第三格,
              空,
              构造棋盘格<
                第四格,
                空,
                构造棋盘格<
                  第五格,
                  空,
                  构造棋盘格<
                    第六格,
                    空,
                    构造棋盘格<
                      第七格,
                      空,
                      构造棋盘格<第八格, 空, 构造棋盘格<第九格, 空, 空>>
                    >
                  >
                >
              >
            >
          >
        >;
      },
      空,
      P
    >
  : 不可能;

type 构造五子棋棋盘参数 = [
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数,
  构造五子棋棋盘行参数
];

type 构造五子棋棋盘<T extends 构造五子棋棋盘参数> = T extends [
  infer 第一行 extends 构造五子棋棋盘行参数,
  infer 第二行 extends 构造五子棋棋盘行参数,
  infer 第三行 extends 构造五子棋棋盘行参数,
  infer 第四行 extends 构造五子棋棋盘行参数,
  infer 第五行 extends 构造五子棋棋盘行参数,
  infer 第六行 extends 构造五子棋棋盘行参数,
  infer 第七行 extends 构造五子棋棋盘行参数,
  infer 第八行 extends 构造五子棋棋盘行参数,
  infer 第九行 extends 构造五子棋棋盘行参数
]
  ? 构造棋盘<
      {
        内容: 构造五子棋棋盘行<
          第一行,
          构造五子棋棋盘行<
            第二行,
            构造五子棋棋盘行<
              第三行,
              构造五子棋棋盘行<
                第四行,
                构造五子棋棋盘行<
                  第五行,
                  构造五子棋棋盘行<
                    第六行,
                    构造五子棋棋盘行<
                      第七行,
                      构造五子棋棋盘行<第八行, 构造五子棋棋盘行<第九行, 空>>
                    >
                  >
                >
              >
            >
          >
        >;
      },
      "黑",
      空,
      否
    >
  : 不可能;

export type 渲染五子棋盘<某棋盘 extends 棋盘> = {
  [key in
    | "一"
    | "二"
    | "三"
    | "四"
    | "五"
    | "六"
    | "七"
    | "八"
    | "九"]: key extends infer 行
    ? 行 extends "上"
      ? " ⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽⎽ "
      : 行 extends "下"
      ? " ⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺⎺ "
      : 行 extends keyof 正数键值对
      ? 获取棋盘指定行<某棋盘, 正数键值对[行]> extends infer 某行
        ? 某行 extends 棋盘行
          ? `⎪ ${渲染行内容<某行["内容"], 五子棋元坐标, 正数键值对[行]>} ⎪`
          : 不可能
        : 不可能
      : 不可能
    : 不可能;
};

type 初始棋盘行参数 = [
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数,
  初始棋盘格参数
];

type 初始棋盘参数 = [
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数,
  初始棋盘行参数
];

export type 初始五子棋盘 = 构造五子棋棋盘<初始棋盘参数>;
